{"ast":null,"code":"import _classCallCheck from \"D:\\\\Works\\\\20ScoopCNX\\\\20scoopcnx-quiz\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Works\\\\20ScoopCNX\\\\20scoopcnx-quiz\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Works\\\\20ScoopCNX\\\\20scoopcnx-quiz\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Works\\\\20ScoopCNX\\\\20scoopcnx-quiz\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Works\\\\20ScoopCNX\\\\20scoopcnx-quiz\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Works\\\\20ScoopCNX\\\\20scoopcnx-quiz\\\\src\\\\searchResultUser.js\";\nimport React, { Component } from 'react';\nimport searchUser from './searchUser';\n\nvar searchResultUser =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(searchResultUser, _Component);\n\n  function searchResultUser() {\n    _classCallCheck(this, searchResultUser);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(searchResultUser).apply(this, arguments));\n  }\n\n  _createClass(searchResultUser, [{\n    key: \"render\",\n    // constructor(props) {\n    //     super(props);\n    //     this.state = {\n    //       apiAddress: \"https://api.github.com/search/users?q=A\", \n    //       error: null,\n    //       isLoaded: false,\n    //       items: []\n    //     };\n    //   }\n    //   componentDidMount() {\n    //     fetch(this.state.apiAddress)\n    //       .then(res => res.json())\n    //       .then(\n    //         (result) => {\n    //           this.setState({\n    //             isLoaded: true,\n    //             items: result.items\n    //           });\n    //         },\n    //         // Note: it's important to handle errors here\n    //         // instead of a catch() block so that we don't swallow\n    //         // exceptions from actual bugs in components.\n    //         (error) => {\n    //           this.setState({\n    //             isLoaded: true,\n    //             error\n    //           });\n    //         }\n    //       )\n    //   }\n    //   render() {\n    //     const { error, isLoaded, items } = this.state;\n    //     if (error) {\n    //       return (\n    //         <div>\n    //             Error: {error.message}            \n    //         </div>\n    //       );\n    //     } else if (!isLoaded) {\n    //       return <div>Loading...</div>;\n    //     } else {\n    //       return (\n    //         <div>\n    //             {this.state.apiAddress}\n    //             <Card responsive >\n    //             <Card.Body>\n    //               <Card.Title>Result ({items.length})</Card.Title>\n    //               <Table bordered hover responsive>\n    //                   <thead class=\"thead-light text-center\">\n    //                       <tr>\n    //                           <th>Pic</th>\n    //                           <th>User</th>\n    //                           <th>URL</th>\n    //                           <th>Detail</th>\n    //                       </tr>\n    //                   </thead>\n    //                   <tbody>\n    //                   {items.map(item => (\n    //                       <tr key={item.id} >\n    //                           <td class=\"text-center\">                                \n    //                               <img src={item.avatar_url}  alt={item.login} width=\"50px\" ></img>\n    //                           </td>             \n    //                           <td class=\"align-center\">\n    //                               {item.login} \n    //                           </td>                 \n    //                           <td>\n    //                               {item.url}\n    //                           </td>                 \n    //                           <td class=\"text-center\">\n    //                               <Button type=\"button\" class=\"btn btn-primary\">Detail</Button>\n    //                           </td>   \n    //                       </tr>\n    //                   ))}\n    //                   </tbody>\n    //               </Table>                \n    //             </Card.Body>\n    //           </Card>\n    //         </div>\n    //       );\n    //     }\n    //   }\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"OK \", this.props.title));\n    }\n  }]);\n\n  return searchResultUser;\n}(Component);\n\nexport default searchResultUser;","map":{"version":3,"sources":["D:\\Works\\20ScoopCNX\\20scoopcnx-quiz\\src\\searchResultUser.js"],"names":["React","Component","searchUser","searchResultUser","props","title"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,cAAvB;;IAEMC,gB;;;;;;;;;;;;;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;6BACS;AACL,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAQ,KAAKC,KAAL,CAAWC,KAAnB,CADF,CADF;AAMD;;;;EA3FwBJ,S;;AA8F/B,eAAeE,gBAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport searchUser from './searchUser';\r\n\r\nclass searchResultUser extends Component {\r\n    // constructor(props) {\r\n    //     super(props);\r\n    //     this.state = {\r\n    //       apiAddress: \"https://api.github.com/search/users?q=A\", \r\n    //       error: null,\r\n    //       isLoaded: false,\r\n    //       items: []\r\n    //     };\r\n    //   }\r\n    //   componentDidMount() {\r\n    //     fetch(this.state.apiAddress)\r\n    //       .then(res => res.json())\r\n    //       .then(\r\n    //         (result) => {\r\n    //           this.setState({\r\n    //             isLoaded: true,\r\n    //             items: result.items\r\n    //           });\r\n    //         },\r\n    //         // Note: it's important to handle errors here\r\n    //         // instead of a catch() block so that we don't swallow\r\n    //         // exceptions from actual bugs in components.\r\n    //         (error) => {\r\n    //           this.setState({\r\n    //             isLoaded: true,\r\n    //             error\r\n    //           });\r\n    //         }\r\n    //       )\r\n    //   }\r\n    \r\n    //   render() {\r\n    //     const { error, isLoaded, items } = this.state;\r\n    //     if (error) {\r\n    //       return (\r\n    //         <div>\r\n    //             Error: {error.message}            \r\n    //         </div>\r\n    //       );\r\n    //     } else if (!isLoaded) {\r\n    //       return <div>Loading...</div>;\r\n    //     } else {\r\n    //       return (\r\n    //         <div>\r\n    //             {this.state.apiAddress}\r\n    //             <Card responsive >\r\n    //             <Card.Body>\r\n    //               <Card.Title>Result ({items.length})</Card.Title>\r\n    //               <Table bordered hover responsive>\r\n    //                   <thead class=\"thead-light text-center\">\r\n    //                       <tr>\r\n    //                           <th>Pic</th>\r\n    //                           <th>User</th>\r\n    //                           <th>URL</th>\r\n    //                           <th>Detail</th>\r\n    //                       </tr>\r\n    //                   </thead>\r\n    //                   <tbody>\r\n    //                   {items.map(item => (\r\n    //                       <tr key={item.id} >\r\n    //                           <td class=\"text-center\">                                \r\n    //                               <img src={item.avatar_url}  alt={item.login} width=\"50px\" ></img>\r\n    //                           </td>             \r\n    //                           <td class=\"align-center\">\r\n    //                               {item.login} \r\n    //                           </td>                 \r\n    //                           <td>\r\n    //                               {item.url}\r\n    //                           </td>                 \r\n    //                           <td class=\"text-center\">\r\n    //                               <Button type=\"button\" class=\"btn btn-primary\">Detail</Button>\r\n    //                           </td>   \r\n    //                       </tr>\r\n    //                   ))}\r\n    //                   </tbody>\r\n    //               </Table>                \r\n    //             </Card.Body>\r\n    //           </Card>\r\n    //         </div>\r\n            \r\n    //       );\r\n    //     }\r\n    //   }\r\n    render() {\r\n        return(\r\n          <div>\r\n            <h1>OK {this.props.title}</h1>\r\n       \r\n          </div>\r\n        );\r\n      }\r\n    }\r\n    \r\nexport default searchResultUser"]},"metadata":{},"sourceType":"module"}