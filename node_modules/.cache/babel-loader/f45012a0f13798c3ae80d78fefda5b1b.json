{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isObject = exports.isFunction = exports.parseBody = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar parseBody = exports.parseBody = function parseBody(response) {\n  var mapping = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var contentType = response.headers.get('Content-Type'); // Do not attempt to parse empty response\n\n  if (contentType === null) {\n    return Promise.resolve(null);\n  }\n\n  var mimeType = contentType.split(';')[0].trim();\n\n  if (mimeType in mapping) {\n    // Direct mapping of `Content-Type`/`mimeType` to response handler\n    return mapping[mimeType](response);\n  } else if (mimeType === 'application/json' || mimeType === 'text/json' || /\\+json$/.test(mimeType) // ends with \"+json\"\n  ) {\n      // https://mimesniff.spec.whatwg.org/#json-mime-type\n      return 'json' in mapping ? mapping['json'](response) : response.json();\n    } else if (mimeType === 'text/html') {\n    // https://mimesniff.spec.whatwg.org/#html-mime-type\n    return 'html' in mapping ? mapping['html'](response) : response.text();\n  } else if (mimeType === 'application/xml' || mimeType === 'text/xml' || /\\+xml$/.test(mimeType) // ends with \"+xml\"\n  ) {\n      // https://mimesniff.spec.whatwg.org/#xml-mime-type\n      return 'xml' in mapping ? mapping['xml'](response) : response.text();\n    } else {\n    return 'other' in mapping ? mapping['other'](response) : response.arrayBuffer();\n  }\n};\n\nvar isFunction = exports.isFunction = function isFunction(value) {\n  return typeof value === 'function';\n};\n\nvar isObject = exports.isObject = function isObject(value) {\n  return (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object';\n};","map":null,"metadata":{},"sourceType":"script"}