{"ast":null,"code":"import _classCallCheck from \"D:\\\\Works\\\\20ScoopCNX\\\\20scoopcnx-quiz\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Works\\\\20ScoopCNX\\\\20scoopcnx-quiz\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Works\\\\20ScoopCNX\\\\20scoopcnx-quiz\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Works\\\\20ScoopCNX\\\\20scoopcnx-quiz\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Works\\\\20ScoopCNX\\\\20scoopcnx-quiz\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\Works\\\\20ScoopCNX\\\\20scoopcnx-quiz\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\Works\\\\20ScoopCNX\\\\20scoopcnx-quiz\\\\src\\\\viewUserRepos.js\";\nimport React, { Component } from 'react';\nimport { Table, Button } from 'react-bootstrap';\n\nvar viewUserRepos =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(viewUserRepos, _Component);\n\n  function viewUserRepos(props) {\n    var _this;\n\n    _classCallCheck(this, viewUserRepos);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(viewUserRepos).call(this, props));\n    _this.state = {\n      apiAddress: \"\",\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n    _this.updateApiUrl = _this.updateApiUrl.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(viewUserRepos, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var curApi = this.state.apiAddress;\n      var newApi = \"https://api.github.com/users/\" + this.props.gitUser + \"/repos\";\n\n      if (curApi !== newApi) {\n        this.updateApiUrl(newApi);\n        this.fetchData(newApi);\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchData(this.state.apiAddress);\n    }\n  }, {\n    key: \"updateApiUrl\",\n    value: function updateApiUrl(url) {\n      this.setState({\n        apiAddress: url\n      });\n    }\n  }, {\n    key: \"fetchData\",\n    value: function fetchData(url) {\n      var _this2 = this;\n\n      fetch(url).then(function (res) {\n        return res.json();\n      }).then(function (result) {\n        _this2.setState({\n          isLoaded: true,\n          items: result\n        });\n      }, // Note: it's important to handle errors here\n      // instead of a catch() block so that we don't swallow\n      // exceptions from actual bugs in components.\n      function (error) {\n        _this2.setState({\n          isLoaded: true,\n          error: error\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded,\n          items = _this$state.items;\n\n      if (error) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, React.createElement(Button, {\n          onClick: this.componentDidUpdate,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, \" See more..\"));\n      } else if (!isLoaded) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, \"Loading...\");\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, React.createElement(Table, {\n          bordered: true,\n          hover: true,\n          responsive: true,\n          size: \"lg\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, React.createElement(\"thead\", {\n          class: \"thead-light text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, \"Repository Name\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, \"Detail\"))), React.createElement(\"tbody\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, items.map(function (item, index) {\n          return React.createElement(\"tr\", {\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            class: \"align-center\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 81\n            },\n            __self: this\n          }, item.name), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84\n            },\n            __self: this\n          }, item.description));\n        }))));\n      }\n    }\n  }]);\n\n  return viewUserRepos;\n}(Component);\n\nexport default viewUserRepos;","map":{"version":3,"sources":["D:\\Works\\20ScoopCNX\\20scoopcnx-quiz\\src\\viewUserRepos.js"],"names":["React","Component","Table","Button","viewUserRepos","props","state","apiAddress","error","isLoaded","items","updateApiUrl","bind","curApi","newApi","gitUser","fetchData","url","setState","fetch","then","res","json","result","componentDidUpdate","map","item","index","name","description"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {Table, Button} from 'react-bootstrap';\r\n\r\nclass viewUserRepos extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          apiAddress: \"\", \r\n          error: null,\r\n          isLoaded: false,\r\n          items: []\r\n        };\r\n        this.updateApiUrl = this.updateApiUrl.bind(this);\r\n      }\r\n      \r\n      componentDidUpdate() {\r\n        var curApi=this.state.apiAddress;\r\n        var newApi=\"https://api.github.com/users/\"+this.props.gitUser+\"/repos\";\r\n          if(curApi!==newApi)\r\n          {\r\n            this.updateApiUrl(newApi);            \r\n            this.fetchData(newApi);\r\n          }\r\n          \r\n      }\r\n\r\n      componentDidMount() {\r\n        this.fetchData(this.state.apiAddress);  \r\n      }\r\n    \r\n      updateApiUrl(url) {\r\n        this.setState({apiAddress:url})\r\n      }\r\n\r\n      fetchData(url){\r\n        fetch(url)\r\n          .then(res => res.json())\r\n          .then(\r\n            (result) => {\r\n              this.setState({\r\n                isLoaded: true,\r\n                items: result\r\n              });\r\n            },\r\n            // Note: it's important to handle errors here\r\n            // instead of a catch() block so that we don't swallow\r\n            // exceptions from actual bugs in components.\r\n            (error) => {\r\n              this.setState({\r\n                isLoaded: true,\r\n                error\r\n              });\r\n            }\r\n          )\r\n      }\r\n\r\n      render() {\r\n        const { error, isLoaded, items } = this.state;\r\n        if (error) {\r\n          return (\r\n            <div>\r\n              {/* Error:{error.message} */}\r\n              <Button onClick={this.componentDidUpdate}> See more..</Button>\r\n            </div>\r\n          );\r\n        } else if (!isLoaded) {\r\n          return <div>Loading...</div>;\r\n        } else {\r\n          return (\r\n            <div>\r\n                <Table bordered hover responsive size=\"lg\">\r\n                    <thead class=\"thead-light text-center\">\r\n                        <tr>\r\n                            <th>Repository Name</th>\r\n                            <th>Detail</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {items.map(( item, index ) => (\r\n                        <tr key={index} >\r\n                            <td class=\"align-center\">\r\n                                {item.name} \r\n                            </td>                 \r\n                            <td>\r\n                                {item.description}\r\n                            </td>         \r\n                        </tr>\r\n                    ))}\r\n                    </tbody>\r\n                </Table>             \r\n            </div>\r\n            \r\n          );\r\n        }\r\n      }\r\n    }\r\n    \r\nexport default viewUserRepos"]},"metadata":{},"sourceType":"module"}